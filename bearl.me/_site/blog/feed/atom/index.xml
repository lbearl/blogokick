<?xml version="1.0" encoding="UTF-8"?>
<feed
  xmlns="http://www.w3.org/2005/Atom"
  xmlns:thr="http://purl.org/syndication/thread/1.0"
  xml:lang="en"
   >
  <title type="text">Luke Bearl</title>
  <subtitle type="text">Software, Design, and Thoughts on Life</subtitle>

  <updated>2012-11-08T00:40:35Z</updated>
  <generator uri="http://blogofile.com/">Blogofile</generator>

  <link rel="alternate" type="text/html" href="http://www.bearl.me/blog" />
  <id>http://www.bearl.me/blog/feed/atom/</id>
  <link rel="self" type="application/atom+xml" href="http://www.bearl.me/blog/feed/atom/" />
  <entry>
    <author>
      <name></name>
      <uri>http://www.bearl.me/blog</uri>
    </author>
    <title type="html"><![CDATA[Blogokick]]></title>
    <link rel="alternate" type="text/html" href="http://www.bearl.me/blog/2012/10/26/blogokick" />
    <id>http://www.bearl.me/blog/2012/10/26/blogokick</id>
    <updated>2012-10-26T11:05:00Z</updated>
    <published>2012-10-26T11:05:00Z</published>
    <category scheme="http://www.bearl.me/blog" term="general" />
    <summary type="html"><![CDATA[Blogokick]]></summary>
    <content type="html" xml:base="http://www.bearl.me/blog/2012/10/26/blogokick"><![CDATA[<h1 id="blogokick">Blogokick</h1>
<p>As mentioned in the update to my initial blog post, I have migrated everything to <a href="www.blogofile.com, Blogofile">blogofile</a>, and integrated a theme built with <a href="www.getkickstrap.com, Kickstrap">kickstrap</a>. This was a rather interesting challenge, as historically I am not a huge fan of front end development, and there was plenty of HTML an Javascript and CSS going on (but for better or worse, I wasn't really writing any javascript or CSS).<br />
</p>
<p>For those who would like to see how I did it, feel free to head over to the <a href="www.github.com/lbearl/blogokick">repository</a> and take a peak.  If you have any helpful suggestions, I would always love to hear them (as I mentioned, I am hardly a front end developer).<br />
</p>
<h2 id="why-blogofilekickstrap">Why Blogofile/Kickstrap</h2>
<p>Now, after hearing me complain about front end development so much in this post, you might be asking why I threw away a perfectly good wordpress install with a decent looking theme?  Well, the answer is pretty simple actually: I wanted to challenge myself with something that I think I'm not very good at, and I also wanted to have a solution which was light weight.  I almost rolled my own blogging platform until I realized that blogofile had all of the features I was thinking about implementing plus more (i.e. disqus and google analytics out of the box).<br />
</p>
<p>There is still a lot of work to be done, and I think I may end up contributing some code back to the blogofile project (I am only on version 0.8b1), so there are some things broken.  That does raise the one big caveat I found while developing this: when you call
    blogofile build
any assets copied into the _sites directory will be deleted (this was especially annoying since my Kickstrap directory and kickstrap.less and theme.less files all were being deleted everytime I had to build, which is everytime I changed a Mako template.) I need to look into this more and see if I misunderstood part of how blogofile works, or if this is a genuine bug.</p>
<h2 id="other-features">Other Features</h2>
<p>After coming from wordpress there are a few things that were really convienient which I would like to make happen on blogofile, mostly this will be things like having an automatically generated XML sitemap, cleaning up the interface a bit, possibly adding some dropbox integration (i.e. Markdown file goes to Dropbox, gets picked up by server and blogofile build is called).<br />
</p>
<p>Currently I am using the git post recieve hook that is documented on the project site, for rebuilding the blog, but I have intentions of extending the functionality of that to include logging and better error handling.</p>]]></content>
  </entry>
  <entry>
    <author>
      <name></name>
      <uri>http://www.bearl.me/blog</uri>
    </author>
    <title type="html"><![CDATA[/usr/bin/build-classpath error and javac not found]]></title>
    <link rel="alternate" type="text/html" href="http://www.bearl.me/blog/2012/10/26/usr-bin-build-classpath-error-and-javac-not-found" />
    <id>http://www.bearl.me/blog/2012/10/26/usr-bin-build-classpath-error-and-javac-not-found</id>
    <updated>2012-10-26T11:05:00Z</updated>
    <published>2012-10-26T11:05:00Z</published>
    <category scheme="http://www.bearl.me/blog" term="debugging" />
    <category scheme="http://www.bearl.me/blog" term="java" />
    <category scheme="http://www.bearl.me/blog" term="troubleshooting" />
    <summary type="html"><![CDATA[/usr/bin/build-classpath error and javac not found]]></summary>
    <content type="html" xml:base="http://www.bearl.me/blog/2012/10/26/usr-bin-build-classpath-error-and-javac-not-found"><![CDATA[<h2 id="the-issue">The Issue</h2>
<p>So, I have been dealing with a really persistent issue with a client at work lately, namely, they can't install a rollout that I did for them!  Obviously, this isn't good.  The issue is further complicated by the fact that the install works perfectly on their pre-production test instances, but when they go to install in production, it isn't working (which is doubly bad). The rollout install log showed one very obvious issue: javac was not able to be found, and one much more subtle issue: /usr/bin/build-classpath was unable to find xml-commons-apis.<br />
</p>
<h2 id="the-cause">The Cause</h2>
<p>The cause of this was found to be, due to the fact that the JAVA_HOME environment variable was pointing to the JRE instead of the JDK.  What I believe happened here is that the JDK provides a number of libraries in order to allow java files to be compiled to bytecode, while the JRE only needs to provide the foundation to run Java.</p>]]></content>
  </entry>
  <entry>
    <author>
      <name></name>
      <uri>http://www.bearl.me/blog</uri>
    </author>
    <title type="html"><![CDATA[New Blog]]></title>
    <link rel="alternate" type="text/html" href="http://www.bearl.me/blog/2012/09/04/new-blog" />
    <id>http://www.bearl.me/blog/2012/09/04/new-blog</id>
    <updated>2012-09-04T03:15:00Z</updated>
    <published>2012-09-04T03:15:00Z</published>
    <category scheme="http://www.bearl.me/blog" term="general" />
    <summary type="html"><![CDATA[New Blog]]></summary>
    <content type="html" xml:base="http://www.bearl.me/blog/2012/09/04/new-blog"><![CDATA[<h1 id="hello">Hello</h1>
<p>Welcome to my little corner of the internet, I figure it is about time that I start a new blog detailing my life, the technology I use, and my ideas about a wide array of things.  In this blog I hope to discuss technology, challenges that I have faced in technology (and the solutions I found to those problems), and anything else that happens to come to mind.  My picture for this blog (and the domain as a whole) is to be a chronicle of my professional experiences, interlaced with a dash of my personality.</p>
<p>To that end, it should be noted that I am a fairly avid Linux user, who is currently making the transition to OS X, so I will probably discuss a fair amount of detail on the LAMP stack, in addition to related technologies.  I do love python, but have been thinking about doing my next project in ruby on rails due to how much noise that software has generated. As I flesh out this blog, I will be adding more details about projects I have worked on in the past, and possibly some speculation about the projects I would like to do in the future.</p>
<hr />
<h1 id="update">Update</h1>
<p>I have migrated the blog from wordpress to blogofile so that I can remove all of the cruft that wordpress brings with it.  Instead now everything is just compiled markdown files and python Mako templates.</p>]]></content>
  </entry>
  <entry>
    <author>
      <name></name>
      <uri>http://www.bearl.me/blog</uri>
    </author>
    <title type="html"><![CDATA[MySQLbak]]></title>
    <link rel="alternate" type="text/html" href="http://www.bearl.me/blog/2010/07/24/mysqlbak" />
    <id>http://www.bearl.me/blog/2010/07/24/mysqlbak</id>
    <updated>2010-07-24T16:20:00Z</updated>
    <published>2010-07-24T16:20:00Z</published>
    <category scheme="http://www.bearl.me/blog" term="python" />
    <category scheme="http://www.bearl.me/blog" term="mysql" />
    <category scheme="http://www.bearl.me/blog" term="general" />
    <summary type="html"><![CDATA[MySQLbak]]></summary>
    <content type="html" xml:base="http://www.bearl.me/blog/2010/07/24/mysqlbak"><![CDATA[<h1 id="mysqlbak">mySQLbak</h1>
<p>So I decided to write a little tool which will automatically backup my WordPress install to Dropbox (plus it is a fun chance to play around with the Dropbox Python API).Â  So far tonight I have managed to get to the point where I am passing a directory, and having python zip up all of the files in the directory.Â  In the long run this approach will probably change as it requires all of the data to be both in its production location and in the location for the backup (you can probably see why that is annoying).</p>
<p>Overall, I am pretty impressed by how easy this entire process has been, the only major hiccup I had was accidentally calling the function which generates the full path + archive name as the name of the archive that Dropbox is supposed to store (for some reason Dropbox blew up a little bit when I wanted it to create /Users/lbearl/.../projects/mysqlbak without requesting any directories be created).</p>
<p>After I finish up the code (and clean it up a lot), and do some basic refactoring (like removing the app secret), I will probably publish the code to Github. After that happens I will write part two of this entry, and probably include a bit more technical discussion about my approach.</p>]]></content>
  </entry>
</feed>
